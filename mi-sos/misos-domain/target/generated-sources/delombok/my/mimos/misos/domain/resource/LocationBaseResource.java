// Generated by delombok at Fri Jan 12 10:14:29 SGT 2018
/**
 * 
 */
package my.mimos.misos.domain.resource;

import java.sql.Timestamp;
import com.fasterxml.jackson.annotation.JsonFormat;

/**
 * @author Shaiful Hisham Mat Jali
 */
public class LocationBaseResource {
	// The latitude in floating point
	protected Float longitude;
	// The longitude in floating point
	protected Float latitude;
	// Location constructed date and time
	@JsonFormat(pattern = "yyyy-MM-dd HH:mm:ss")
	protected Timestamp locationDate;

	@java.lang.SuppressWarnings("all")
	@javax.annotation.Generated("lombok")
	public Float getLongitude() {
		return this.longitude;
	}

	@java.lang.SuppressWarnings("all")
	@javax.annotation.Generated("lombok")
	public Float getLatitude() {
		return this.latitude;
	}

	@java.lang.SuppressWarnings("all")
	@javax.annotation.Generated("lombok")
	public Timestamp getLocationDate() {
		return this.locationDate;
	}

	@java.lang.SuppressWarnings("all")
	@javax.annotation.Generated("lombok")
	public void setLongitude(final Float longitude) {
		this.longitude = longitude;
	}

	@java.lang.SuppressWarnings("all")
	@javax.annotation.Generated("lombok")
	public void setLatitude(final Float latitude) {
		this.latitude = latitude;
	}

	@java.lang.SuppressWarnings("all")
	@javax.annotation.Generated("lombok")
	public void setLocationDate(final Timestamp locationDate) {
		this.locationDate = locationDate;
	}

	@java.lang.Override
	@java.lang.SuppressWarnings("all")
	@javax.annotation.Generated("lombok")
	public java.lang.String toString() {
		return "LocationBaseResource(longitude=" + this.getLongitude() + ", latitude=" + this.getLatitude() + ", locationDate=" + this.getLocationDate() + ")";
	}

	@java.lang.Override
	@java.lang.SuppressWarnings("all")
	@javax.annotation.Generated("lombok")
	public boolean equals(final java.lang.Object o) {
		if (o == this) return true;
		if (!(o instanceof LocationBaseResource)) return false;
		final LocationBaseResource other = (LocationBaseResource) o;
		if (!other.canEqual((java.lang.Object) this)) return false;
		final java.lang.Object this$longitude = this.getLongitude();
		final java.lang.Object other$longitude = other.getLongitude();
		if (this$longitude == null ? other$longitude != null : !this$longitude.equals(other$longitude)) return false;
		final java.lang.Object this$latitude = this.getLatitude();
		final java.lang.Object other$latitude = other.getLatitude();
		if (this$latitude == null ? other$latitude != null : !this$latitude.equals(other$latitude)) return false;
		final java.lang.Object this$locationDate = this.getLocationDate();
		final java.lang.Object other$locationDate = other.getLocationDate();
		if (this$locationDate == null ? other$locationDate != null : !this$locationDate.equals(other$locationDate)) return false;
		return true;
	}

	@java.lang.SuppressWarnings("all")
	@javax.annotation.Generated("lombok")
	protected boolean canEqual(final java.lang.Object other) {
		return other instanceof LocationBaseResource;
	}

	@java.lang.Override
	@java.lang.SuppressWarnings("all")
	@javax.annotation.Generated("lombok")
	public int hashCode() {
		final int PRIME = 59;
		int result = 1;
		final java.lang.Object $longitude = this.getLongitude();
		result = result * PRIME + ($longitude == null ? 43 : $longitude.hashCode());
		final java.lang.Object $latitude = this.getLatitude();
		result = result * PRIME + ($latitude == null ? 43 : $latitude.hashCode());
		final java.lang.Object $locationDate = this.getLocationDate();
		result = result * PRIME + ($locationDate == null ? 43 : $locationDate.hashCode());
		return result;
	}

	@java.lang.SuppressWarnings("all")
	@javax.annotation.Generated("lombok")
	public LocationBaseResource() {
	}
}
